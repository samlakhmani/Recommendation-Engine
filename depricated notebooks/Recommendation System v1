{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyMvDcxbnqVllgJ5tJ2uaOLD"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"GAv7Jzk0WTdj"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import mean_squared_error\n","from math import sqrt"]},{"cell_type":"code","source":["# Load the Drive helper and mount\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qeyVT2sSWlHZ","executionInfo":{"status":"ok","timestamp":1701004977217,"user_tz":0,"elapsed":2193,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"cea9c9a5-1421-4486-bee0-20a0782a1c42"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["import os\n","\n","os.chdir(\"/content/drive/MyDrive/Hunch/data\")"],"metadata":{"id":"xrVBFSFaXQ2A"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Loading the data"],"metadata":{"id":"aiMXiLDFbGke"}},{"cell_type":"code","source":["events_data = pd.read_csv(\"Train_data.csv\")\n","poll_features = pd.read_csv(\"poll_question_features.csv\")"],"metadata":{"id":"q7YBR-okXsSZ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Exploratory Data Analysis"],"metadata":{"id":"CfuHA3wubGVY"}},{"cell_type":"markdown","source":["#### Events data"],"metadata":{"id":"VnoJebYDdkHk"}},{"cell_type":"markdown","source":["**Investigating user_code**"],"metadata":{"id":"ZywFSLr9hbzZ"}},{"cell_type":"code","source":["events_data[['user_code','poll_code']].nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QNez8OWmX16z","executionInfo":{"status":"ok","timestamp":1701004980655,"user_tz":0,"elapsed":27,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"9b54a7aa-de26-4fcd-ce4e-2efb8e46317e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["user_code    4499\n","poll_code     893\n","dtype: int64"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["events_data['user_code_new'] = events_data.user_code.apply(lambda x : x.split(\"_\")[-1])\n","# some users user_code is missing and the value is unknown_user and such entries are being flagged as -1\n","events_data.loc[~events_data.user_code_new.str.isnumeric(),'user_code_new'] = -1\n","events_data['user_code_new'] = events_data['user_code_new'].astype(int)\n","events_data['user_code_new'].max()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AbuXK289bRNb","executionInfo":{"status":"ok","timestamp":1701004981554,"user_tz":0,"elapsed":921,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"d344237b-4f01-4397-e0b0-e4979818247a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4835"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["\n","# some users dont have any events data\n","# Out of total users of 4835, we have events data for 4499 users\n"],"metadata":{"id":"9EvspzaIeOXF"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Investigating poll_code**"],"metadata":{"id":"_wjrEYNEhkyL"}},{"cell_type":"code","source":["events_data[['user_code','poll_code']].nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o-87Bbzlha6X","executionInfo":{"status":"ok","timestamp":1701004982477,"user_tz":0,"elapsed":925,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"07082cab-6b19-465b-86df-c147dd0c8935"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["user_code    4499\n","poll_code     893\n","dtype: int64"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["events_data['poll_code_new'] = events_data.poll_code.apply(lambda x : x.split(\"_\")[-1])\n","# some users poll_code is missing and the value is unknown_user and such entries are being flagged as -1\n","events_data.loc[~events_data.poll_code_new.str.isnumeric(),'poll_code_new'] = -1\n","events_data['poll_code_new'] = events_data['poll_code_new'].astype(int)\n","events_data['poll_code_new'].max()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701004982477,"user_tz":0,"elapsed":6,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"0b9d015e-5537-4469-d663-9b9feedc12ab","id":"mtbhiSz8ftLT"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["920"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["\n","# some users dont have any events data\n","# Out of total polls of 920, we have events data for 893 polls/questions\n"],"metadata":{"id":"NO0Gr_KyftLh"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Investigating event type**"],"metadata":{"id":"AL6RDfoahoex"}},{"cell_type":"code","source":["events_data.event.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"00WIpGN5bSR_","executionInfo":{"status":"ok","timestamp":1701004982856,"user_tz":0,"elapsed":383,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"99fc1147-840f-4a97-bce6-8a496c91d488"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Impression        138739\n","Polls Answered    102950\n","Expand              5632\n","Session             3421\n","Shares               439\n","Name: event, dtype: int64"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["| Interaction Type | Description                                                                                              |\n","|------------------|----------------------------------------------------------------------------------------------------------|\n","| Session            | One login - logout                                               |\n","| Impression       | This indicates that the user only viewed the poll but did not participate in it                           |\n","| Expand           | This indicates that the user expanded the post to view the comments                                      |\n","| Shares           | This indicates that the user shared the post                                                              |\n","| Polls Answered   | Indicates that the user participated in the poll by voting for the option mentioned in the poll_option_id column |\n","\n"],"metadata":{"id":"BOmJbb7WiemL"}},{"cell_type":"markdown","source":["**Investigating Event type - Session**"],"metadata":{"id":"8NVkEfBNiLCL"}},{"cell_type":"code","source":["events_data[events_data.event=='Session'].poll_code_new.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z3QFp4uLZr8z","executionInfo":{"status":"ok","timestamp":1701004982857,"user_tz":0,"elapsed":10,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"52f067e9-a2d8-4d63-acbb-46d6b08786c2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-1    3421\n","Name: poll_code_new, dtype: int64"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["(events_data.poll_code=='unknown_poll').value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5B7p0Hrjd6Vd","executionInfo":{"status":"ok","timestamp":1701004982857,"user_tz":0,"elapsed":6,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"caeede03-f2ca-41d1-f445-d7989e886d27"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False    247760\n","True       3421\n","Name: poll_code, dtype: int64"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["## All events that are of type session, the poll_code is unknown_poll,\n","## which is genuine,\n","## as these events are login-logoff events"],"metadata":{"id":"BA18pQ0Kd6Rs"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Investigating Event type - Impression, Expand, Session, Shares**"],"metadata":{"id":"--cky4gAiRqZ"}},{"cell_type":"code","source":["pd.set_option(\"display.max_rows\",200)"],"metadata":{"id":"7xwo7vUbkexG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["events_data[\n","\n","    #getting single user data\n","    (events_data.user_code.isin(events_data.sample(1).user_code)) &\n","\n","    #getting relevant events\n","    (events_data.event.isin(['Impression','Expand','Session','Shares']))\n","\n","].sort_values(['user_code','poll_code','event'])[['createdAt','user_code','poll_code','event','id_code']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"FA6msUOZjUsz","executionInfo":{"status":"ok","timestamp":1701004983270,"user_tz":0,"elapsed":416,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"eee98dd4-0a1f-4bb7-df13-98ef589d194c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                      createdAt     user_code poll_code       event  \\\n","18456   2023-01-02 16:41:54 UTC  unknown_user    poll_1  Impression   \n","28277   2023-01-03 06:51:58 UTC  unknown_user    poll_1  Impression   \n","34605   2023-01-05 08:43:42 UTC  unknown_user    poll_1  Impression   \n","35339   2023-01-05 11:21:34 UTC  unknown_user    poll_1  Impression   \n","36711   2023-01-05 08:54:27 UTC  unknown_user    poll_1  Impression   \n","...                         ...           ...       ...         ...   \n","109458  2023-01-28 12:29:25 UTC  unknown_user   poll_99  Impression   \n","110153  2023-01-28 21:33:48 UTC  unknown_user   poll_99  Impression   \n","115253  2023-01-28 13:12:32 UTC  unknown_user   poll_99  Impression   \n","116567  2023-01-28 10:11:36 UTC  unknown_user   poll_99  Impression   \n","143328  2023-01-24 19:54:52 UTC  unknown_user   poll_99  Impression   \n","\n","              id_code  \n","18456    option_39277  \n","28277    option_50916  \n","34605    option_57651  \n","35339    option_58492  \n","36711    option_60044  \n","...               ...  \n","109458  option_138650  \n","110153  option_139373  \n","115253  option_144538  \n","116567  option_145874  \n","143328  option_177505  \n","\n","[15031 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-92414f57-8d32-4eef-a65a-d8b3eac5b06e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>createdAt</th>\n","      <th>user_code</th>\n","      <th>poll_code</th>\n","      <th>event</th>\n","      <th>id_code</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>18456</th>\n","      <td>2023-01-02 16:41:54 UTC</td>\n","      <td>unknown_user</td>\n","      <td>poll_1</td>\n","      <td>Impression</td>\n","      <td>option_39277</td>\n","    </tr>\n","    <tr>\n","      <th>28277</th>\n","      <td>2023-01-03 06:51:58 UTC</td>\n","      <td>unknown_user</td>\n","      <td>poll_1</td>\n","      <td>Impression</td>\n","      <td>option_50916</td>\n","    </tr>\n","    <tr>\n","      <th>34605</th>\n","      <td>2023-01-05 08:43:42 UTC</td>\n","      <td>unknown_user</td>\n","      <td>poll_1</td>\n","      <td>Impression</td>\n","      <td>option_57651</td>\n","    </tr>\n","    <tr>\n","      <th>35339</th>\n","      <td>2023-01-05 11:21:34 UTC</td>\n","      <td>unknown_user</td>\n","      <td>poll_1</td>\n","      <td>Impression</td>\n","      <td>option_58492</td>\n","    </tr>\n","    <tr>\n","      <th>36711</th>\n","      <td>2023-01-05 08:54:27 UTC</td>\n","      <td>unknown_user</td>\n","      <td>poll_1</td>\n","      <td>Impression</td>\n","      <td>option_60044</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>109458</th>\n","      <td>2023-01-28 12:29:25 UTC</td>\n","      <td>unknown_user</td>\n","      <td>poll_99</td>\n","      <td>Impression</td>\n","      <td>option_138650</td>\n","    </tr>\n","    <tr>\n","      <th>110153</th>\n","      <td>2023-01-28 21:33:48 UTC</td>\n","      <td>unknown_user</td>\n","      <td>poll_99</td>\n","      <td>Impression</td>\n","      <td>option_139373</td>\n","    </tr>\n","    <tr>\n","      <th>115253</th>\n","      <td>2023-01-28 13:12:32 UTC</td>\n","      <td>unknown_user</td>\n","      <td>poll_99</td>\n","      <td>Impression</td>\n","      <td>option_144538</td>\n","    </tr>\n","    <tr>\n","      <th>116567</th>\n","      <td>2023-01-28 10:11:36 UTC</td>\n","      <td>unknown_user</td>\n","      <td>poll_99</td>\n","      <td>Impression</td>\n","      <td>option_145874</td>\n","    </tr>\n","    <tr>\n","      <th>143328</th>\n","      <td>2023-01-24 19:54:52 UTC</td>\n","      <td>unknown_user</td>\n","      <td>poll_99</td>\n","      <td>Impression</td>\n","      <td>option_177505</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>15031 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-92414f57-8d32-4eef-a65a-d8b3eac5b06e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-92414f57-8d32-4eef-a65a-d8b3eac5b06e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-92414f57-8d32-4eef-a65a-d8b3eac5b06e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-625d2b50-4f77-47ae-98c2-529a9b0c96e1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-625d2b50-4f77-47ae-98c2-529a9b0c96e1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-625d2b50-4f77-47ae-98c2-529a9b0c96e1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["events_data['user_poll_pair'] = events_data.user_code_new.astype(str) + \"_\" + events_data.poll_code_new.astype(str)"],"metadata":{"id":"ZKC1C4kcNCib"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["*Shares* - checking if all shares has impressions or not"],"metadata":{"id":"Ka5R-oCXQAPN"}},{"cell_type":"code","source":["events_data[events_data.event=='Shares'].user_poll_pair.nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0Y3NH7VvMbV_","executionInfo":{"status":"ok","timestamp":1701004984659,"user_tz":0,"elapsed":6,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"4da38fc6-ec41-495a-a3d7-404b91dab7da"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["342"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["events_data[events_data.event=='Shares'].user_poll_pair.drop_duplicates().isin(events_data[events_data.event=='Impression'].user_poll_pair).value_counts()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5vZiorAHNbEd","executionInfo":{"status":"ok","timestamp":1701004985003,"user_tz":0,"elapsed":4,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"c4e02191-3db1-4718-af3f-22a5ef290d85"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True     322\n","False     20\n","Name: user_poll_pair, dtype: int64"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["append1 = events_data[events_data.event=='Shares'].drop_duplicates('user_poll_pair',keep='first')[\n","    ~ events_data[events_data.event=='Shares'].user_poll_pair.drop_duplicates().isin(events_data[events_data.event=='Impression'].user_poll_pair)\n","]"],"metadata":{"id":"MQbwK4R8QqLY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["append1.event = 'Impression'"],"metadata":{"id":"Z3SiyrhPQqLm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["append1.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YLeEk_gDQvZH","executionInfo":{"status":"ok","timestamp":1701004985457,"user_tz":0,"elapsed":7,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"b2b819fe-c840-4241-d282-9d0a64e26c73"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(20, 13)"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["*Expand* - checking if all shares has impressions or not"],"metadata":{"id":"dAymR8GgQMqh"}},{"cell_type":"code","source":["events_data[events_data.event=='Expand'].user_poll_pair.nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701004985685,"user_tz":0,"elapsed":233,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"74a66355-4a6f-4287-943a-cd4f1a5d5ef3","id":"ptPuDjs6OAaP"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4642"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["events_data[events_data.event=='Expand'].user_poll_pair.drop_duplicates().isin(events_data[events_data.event=='Impression'].user_poll_pair).value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6Oj53FmVN5HU","executionInfo":{"status":"ok","timestamp":1701004986641,"user_tz":0,"elapsed":958,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"4c32ca38-25b3-43f6-9560-8c4be646c542"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True     4476\n","False     166\n","Name: user_poll_pair, dtype: int64"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["append2 = events_data[events_data.event=='Expand'].drop_duplicates('user_poll_pair',keep='first')[\n","    ~ events_data[events_data.event=='Expand'].user_poll_pair.drop_duplicates().isin(events_data[events_data.event=='Impression'].user_poll_pair)\n","]"],"metadata":{"id":"sPMbn37LPCOl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["append2.event = 'Impression'"],"metadata":{"id":"BEkpYjJCQd3X"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["append2.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xaEAiE8ZQzVy","executionInfo":{"status":"ok","timestamp":1701004986642,"user_tz":0,"elapsed":5,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"dfaf9ae2-e82b-47ac-a22d-b0a3deb3aab0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(166, 13)"]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","source":["*Polls Answered* - checking if all shares has impressions or not"],"metadata":{"id":"gpdAtreCQMy_"}},{"cell_type":"code","source":["events_data[events_data.event=='Polls Answered'].user_poll_pair.nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701004987004,"user_tz":0,"elapsed":365,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"d9c91f47-c5e4-43b9-ae1c-1549fd6d4441","id":"F6wyIF42OA7b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["102916"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["events_data[events_data.event=='Polls Answered'].user_poll_pair.drop_duplicates().isin(events_data[events_data.event=='Impression'].user_poll_pair).value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rEy-wUuIN5pM","executionInfo":{"status":"ok","timestamp":1701004987821,"user_tz":0,"elapsed":819,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"dd0539f5-bd3a-45dd-f31e-ccf9f0bd3f39"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True     83751\n","False    19165\n","Name: user_poll_pair, dtype: int64"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["append3 = events_data[events_data.event=='Polls Answered'].drop_duplicates('user_poll_pair',keep='first')[\n","    ~ events_data[events_data.event=='Polls Answered'].user_poll_pair.drop_duplicates().isin(events_data[events_data.event=='Impression'].user_poll_pair)\n","]"],"metadata":{"id":"3MqJrdUHQ3NC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["append3.event = 'Impression'"],"metadata":{"id":"gJo_ZlUNQ3NP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["append3.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701004988768,"user_tz":0,"elapsed":9,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"c42fffb1-4673-4ce8-c6a0-f05e7d25eda1","id":"D7bCRM_qQ3NP"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(19165, 13)"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["events_data = pd.concat([events_data,append1,append2,append3],axis=0)"],"metadata":{"id":"zHAXJncpRJdi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["## impression indicates that the user has seen the poll\n","## after Impression user can Expand, Share or Answer\n","## A lot of Polls Answered didnt have impression - which was odd, thus events were created"],"metadata":{"id":"E3ZrNEDxj42T"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Investigating id_code**"],"metadata":{"id":"B3m__ZBPo4wP"}},{"cell_type":"code","source":["events_data.id_code"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dLTqpv6IozPj","executionInfo":{"status":"ok","timestamp":1701004988768,"user_tz":0,"elapsed":5,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"33626d08-70ec-4214-c39f-c148a24d9f5b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0          option_17106\n","1          option_17107\n","2          option_17108\n","3          option_17109\n","4          option_17110\n","              ...      \n","251143    option_184762\n","251146    option_185051\n","251177    option_184768\n","251178    option_184767\n","251179    option_184768\n","Name: id_code, Length: 270532, dtype: object"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["events_data.id_code.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LYJMETS1iRqj","executionInfo":{"status":"ok","timestamp":1701004989130,"user_tz":0,"elapsed":365,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"c17233de-6f6e-49a3-b618-7932bd0af1ea"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["events_data[events_data.event==\"Session\"].id_code.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vwr35MT-d6I8","executionInfo":{"status":"ok","timestamp":1701004989730,"user_tz":0,"elapsed":333,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"63ffec0f-b1f7-40d2-c605-dd9fee35dbe5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["# id_code is not clear, how can a Session have an option_id.\n","# It makes sense that there is id_code for Polls Answered but having an id_code for any other event is not possible.\n","# Thus the description doesnt match the data\n","# we shall ignore the column"],"metadata":{"id":"fWInytoF34YT"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Investigating other user-based data-points :**\n","\n","* 'country'\n","* 'city_code'\n","* 'gender'\n","* 'age'\n","* 'college_code'"],"metadata":{"id":"HbqJjRB94zll"}},{"cell_type":"code","source":["columns = ['country','city_code','gender','age','college_code']"],"metadata":{"id":"Za-zeHdK4_FT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["user_features = pd.DataFrame()\n","\n","for i in columns :\n","\n","  temp = events_data[['user_code',i]].groupby(['user_code',i]).count().reset_index()\n","\n","  print(i)\n","\n","  #checking is same user has multiple entries or not\n","  print(temp.user_code.nunique(), temp.shape,\"\\n\")\n","\n","  if i == 'country' :\n","    user_features = temp\n","  else :\n","    user_features = user_features.merge(temp,on='user_code',how='left')\n","\n","user_features = user_features[user_features.user_code!='unknown_user']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aQrjIVfu5BeK","executionInfo":{"status":"ok","timestamp":1701004990800,"user_tz":0,"elapsed":1071,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"382b1147-d6a7-4206-ea81-643a177ea4d5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["country\n","4499 (4499, 2) \n","\n","city_code\n","4499 (4499, 2) \n","\n","gender\n","4499 (4500, 2) \n","\n","age\n","2031 (2031, 2) \n","\n","college_code\n","1221 (1221, 2) \n","\n"]}]},{"cell_type":"code","source":["user_features.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"pgyyjEcx-k2k","executionInfo":{"status":"ok","timestamp":1701004990800,"user_tz":0,"elapsed":5,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"75ef3032-92f1-4a3e-d998-2645f4ac52c7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   user_code          country     city_code           gender   age  \\\n","1     user_1        country_1        city_1             male  18.0   \n","2    user_10  unknown_country  unknown_city  skipped_by_user   NaN   \n","3   user_100  unknown_country  unknown_city  skipped_by_user   NaN   \n","4  user_1000        country_1        city_1  skipped_by_user   NaN   \n","5  user_1001        country_1       city_57             male  21.0   \n","\n","  college_code  \n","1          NaN  \n","2          NaN  \n","3          NaN  \n","4          NaN  \n","5          NaN  "],"text/html":["\n","  <div id=\"df-3f5c0695-3db7-4512-9e9e-ccc258069fd3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_code</th>\n","      <th>country</th>\n","      <th>city_code</th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>college_code</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>user_1</td>\n","      <td>country_1</td>\n","      <td>city_1</td>\n","      <td>male</td>\n","      <td>18.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>user_10</td>\n","      <td>unknown_country</td>\n","      <td>unknown_city</td>\n","      <td>skipped_by_user</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>user_100</td>\n","      <td>unknown_country</td>\n","      <td>unknown_city</td>\n","      <td>skipped_by_user</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>user_1000</td>\n","      <td>country_1</td>\n","      <td>city_1</td>\n","      <td>skipped_by_user</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>user_1001</td>\n","      <td>country_1</td>\n","      <td>city_57</td>\n","      <td>male</td>\n","      <td>21.0</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3f5c0695-3db7-4512-9e9e-ccc258069fd3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3f5c0695-3db7-4512-9e9e-ccc258069fd3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3f5c0695-3db7-4512-9e9e-ccc258069fd3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0c737606-6330-4c4f-8616-6566689945c9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0c737606-6330-4c4f-8616-6566689945c9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0c737606-6330-4c4f-8616-6566689945c9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["user_features.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vbA5OK93-EUa","executionInfo":{"status":"ok","timestamp":1701004990801,"user_tz":0,"elapsed":6,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"beadce17-860c-4c5e-ccd1-69e606e4f4fd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 4499 entries, 1 to 4499\n","Data columns (total 6 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   user_code     4499 non-null   object \n"," 1   country       4499 non-null   object \n"," 2   city_code     4499 non-null   object \n"," 3   gender        4499 non-null   object \n"," 4   age           2032 non-null   float64\n"," 5   college_code  1222 non-null   object \n","dtypes: float64(1), object(5)\n","memory usage: 246.0+ KB\n"]}]},{"cell_type":"code","source":["for i in ['country', 'city_code', 'gender', 'college_code'] :\n","\n","  #printing value_counts - to estimate null_values vs missing imputations\n","\n","  temp2 = pd.DataFrame(user_features[i].value_counts())\n","  temp2 = temp2[temp2[i] > 225]\n","\n","  #5% of total unique users 4500 = 225\n","  #logic is minimum bucket size should be 5%\n","\n","  display(temp2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":365},"id":"zLwaS1lk4JCu","executionInfo":{"status":"ok","timestamp":1701004990801,"user_tz":0,"elapsed":5,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"c9b646ff-5e46-48b2-819e-954732bef079"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["           country\n","country_1     4285"],"text/html":["\n","  <div id=\"df-1db774cb-7817-4bab-bf1f-40b4d5353477\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>country_1</th>\n","      <td>4285</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1db774cb-7817-4bab-bf1f-40b4d5353477')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1db774cb-7817-4bab-bf1f-40b4d5353477 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1db774cb-7817-4bab-bf1f-40b4d5353477');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["         city_code\n","city_1        3351\n","city_18        238"],"text/html":["\n","  <div id=\"df-142f143a-24ad-4512-8403-5ee43a41074c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>city_code</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>city_1</th>\n","      <td>3351</td>\n","    </tr>\n","    <tr>\n","      <th>city_18</th>\n","      <td>238</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-142f143a-24ad-4512-8403-5ee43a41074c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-142f143a-24ad-4512-8403-5ee43a41074c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-142f143a-24ad-4512-8403-5ee43a41074c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4baaf747-3d7c-4d4c-9d2c-ced4e57fb52f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4baaf747-3d7c-4d4c-9d2c-ced4e57fb52f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4baaf747-3d7c-4d4c-9d2c-ced4e57fb52f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["                 gender\n","skipped_by_user    2496\n","male               1668\n","female              310"],"text/html":["\n","  <div id=\"df-52f42dd3-fc7e-4d96-bea8-db07fee6efb8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>skipped_by_user</th>\n","      <td>2496</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>1668</td>\n","    </tr>\n","    <tr>\n","      <th>female</th>\n","      <td>310</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-52f42dd3-fc7e-4d96-bea8-db07fee6efb8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-52f42dd3-fc7e-4d96-bea8-db07fee6efb8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-52f42dd3-fc7e-4d96-bea8-db07fee6efb8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1b916fc6-7ac1-460c-9f48-3b03113f104c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1b916fc6-7ac1-460c-9f48-3b03113f104c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1b916fc6-7ac1-460c-9f48-3b03113f104c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["       college_code\n","Other           494"],"text/html":["\n","  <div id=\"df-f878ce83-958c-48b6-aa61-4e659c3b09e3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>college_code</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Other</th>\n","      <td>494</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f878ce83-958c-48b6-aa61-4e659c3b09e3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f878ce83-958c-48b6-aa61-4e659c3b09e3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f878ce83-958c-48b6-aa61-4e659c3b09e3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{}}]},{"cell_type":"code","source":["\n","\n","# most users are from the same country\n","# most users are from 2 cities, others we will ignore\n","# age we will have to bucket\n","# even college code that is significant os others, thus, we will make 2 buckets of college code\n","\n"],"metadata":{"id":"Fq6mT_WU4o05"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["user_features.loc[user_features.country != 'country_1', 'country'] = 'Others'"],"metadata":{"id":"aBZ2uU4G4o7l"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["user_features.loc[~user_features.city_code.isin(['city_1','city_18']), 'city_code'] = 'Others'"],"metadata":{"id":"Ue_5BB3VBL5m"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["user_features.loc[~user_features.gender.isin(['male','female','skipped_by_user']), 'gender'] = 'Others'"],"metadata":{"id":"j52piSyu4I-_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["user_features.loc[user_features.college_code.isin(['Other']), 'college_code']  = 'code_missing_aka_others'\n","user_features.loc[~user_features.college_code.isin(['Other']), 'college_code']  = 'code_present'\n","user_features.college_code = user_features.college_code.fillna(\"skipped\")"],"metadata":{"id":"bS_AqD1N4I6v"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["user_features.age = pd.qcut(user_features.age,3)"],"metadata":{"id":"DGYBr5qMCnFz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["user_features"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"pvsUakt4ENAQ","executionInfo":{"status":"ok","timestamp":1701004991157,"user_tz":0,"elapsed":19,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"bcb760ac-cc5f-43a2-e632-1a3c7f80d14b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      user_code    country city_code           gender             age  \\\n","1        user_1  country_1    city_1             male  (-1.001, 19.0]   \n","2       user_10     Others    Others  skipped_by_user             NaN   \n","3      user_100     Others    Others  skipped_by_user             NaN   \n","4     user_1000  country_1    city_1  skipped_by_user             NaN   \n","5     user_1001  country_1    Others             male    (19.0, 22.0]   \n","...         ...        ...       ...              ...             ...   \n","4495   user_995  country_1    city_1  skipped_by_user             NaN   \n","4496   user_996  country_1    city_1             male  (-1.001, 19.0]   \n","4497   user_997  country_1    Others           female    (22.0, 61.0]   \n","4498   user_998  country_1    city_1             male  (-1.001, 19.0]   \n","4499   user_999  country_1    Others  skipped_by_user             NaN   \n","\n","      college_code  \n","1     code_present  \n","2     code_present  \n","3     code_present  \n","4     code_present  \n","5     code_present  \n","...            ...  \n","4495  code_present  \n","4496  code_present  \n","4497  code_present  \n","4498  code_present  \n","4499  code_present  \n","\n","[4499 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-489f37dc-dfe8-4b5c-90c0-56ff528962fa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_code</th>\n","      <th>country</th>\n","      <th>city_code</th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>college_code</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>user_1</td>\n","      <td>country_1</td>\n","      <td>city_1</td>\n","      <td>male</td>\n","      <td>(-1.001, 19.0]</td>\n","      <td>code_present</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>user_10</td>\n","      <td>Others</td>\n","      <td>Others</td>\n","      <td>skipped_by_user</td>\n","      <td>NaN</td>\n","      <td>code_present</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>user_100</td>\n","      <td>Others</td>\n","      <td>Others</td>\n","      <td>skipped_by_user</td>\n","      <td>NaN</td>\n","      <td>code_present</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>user_1000</td>\n","      <td>country_1</td>\n","      <td>city_1</td>\n","      <td>skipped_by_user</td>\n","      <td>NaN</td>\n","      <td>code_present</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>user_1001</td>\n","      <td>country_1</td>\n","      <td>Others</td>\n","      <td>male</td>\n","      <td>(19.0, 22.0]</td>\n","      <td>code_present</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4495</th>\n","      <td>user_995</td>\n","      <td>country_1</td>\n","      <td>city_1</td>\n","      <td>skipped_by_user</td>\n","      <td>NaN</td>\n","      <td>code_present</td>\n","    </tr>\n","    <tr>\n","      <th>4496</th>\n","      <td>user_996</td>\n","      <td>country_1</td>\n","      <td>city_1</td>\n","      <td>male</td>\n","      <td>(-1.001, 19.0]</td>\n","      <td>code_present</td>\n","    </tr>\n","    <tr>\n","      <th>4497</th>\n","      <td>user_997</td>\n","      <td>country_1</td>\n","      <td>Others</td>\n","      <td>female</td>\n","      <td>(22.0, 61.0]</td>\n","      <td>code_present</td>\n","    </tr>\n","    <tr>\n","      <th>4498</th>\n","      <td>user_998</td>\n","      <td>country_1</td>\n","      <td>city_1</td>\n","      <td>male</td>\n","      <td>(-1.001, 19.0]</td>\n","      <td>code_present</td>\n","    </tr>\n","    <tr>\n","      <th>4499</th>\n","      <td>user_999</td>\n","      <td>country_1</td>\n","      <td>Others</td>\n","      <td>skipped_by_user</td>\n","      <td>NaN</td>\n","      <td>code_present</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4499 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-489f37dc-dfe8-4b5c-90c0-56ff528962fa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-489f37dc-dfe8-4b5c-90c0-56ff528962fa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-489f37dc-dfe8-4b5c-90c0-56ff528962fa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-404b3326-9b24-4886-bfd6-2e7b71e70166\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-404b3326-9b24-4886-bfd6-2e7b71e70166')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-404b3326-9b24-4886-bfd6-2e7b71e70166 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":50}]},{"cell_type":"markdown","source":["#### Poll / Question Features"],"metadata":{"id":"16xqOSpya-mk"}},{"cell_type":"code","source":["poll_features.poll_code.nunique(),poll_features.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zi15YeHwX3r8","executionInfo":{"status":"ok","timestamp":1701004991158,"user_tz":0,"elapsed":19,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"c131537b-4446-485b-9715-a1c7171809b2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(707, 807)"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["temp = pd.DataFrame(poll_features.poll_code.value_counts()).reset_index()\n","\n","list_of_double_cat = temp[temp.poll_code>=2]['index'].values\n","\n","print(\"count of duplicates - \",len(list_of_double_cat),\"\\n\\n\")\n","\n","poll_features[poll_features.poll_code.isin(list_of_double_cat)]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"c8HEvIM1YWYm","executionInfo":{"status":"ok","timestamp":1701004991158,"user_tz":0,"elapsed":16,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"bb24cc01-6dff-4d1b-a93c-6db3b7ab1bd3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["count of duplicates -  60 \n","\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["    poll_code displayType               categories\n","9     poll_22        text                   Random\n","10    poll_22        text                Lifestyle\n","16    poll_33        text                   Random\n","17    poll_33        text  Dating and Relationship\n","44    poll_97        text                   Random\n","45    poll_97        text                    Other\n","48   poll_101        text                   Random\n","49   poll_101        text                    Other\n","52   poll_107        text                   Random\n","53   poll_107        text         Would You Rather\n","60   poll_119        text                   Random\n","61   poll_119        text  Dating and Relationship\n","75   poll_140        text                   Random\n","76   poll_140        text                   Trivia\n","78   poll_142        text                   Random\n","79   poll_142        text                    Other\n","83   poll_149        text                   Random\n","84   poll_149        text  Dating and Relationship\n","90   poll_161        text                   Random\n","91   poll_161        text  Dating and Relationship\n","128  poll_235        text                   Random\n","129  poll_235        text                Lifestyle\n","143  poll_256        text                   Random\n","144  poll_256        text                    Other\n","150  poll_269        text                   Random\n","151  poll_269        text                    Other\n","173  poll_319        text                   Random\n","174  poll_319        text  Dating and Relationship\n","175  poll_322        text                   Random\n","176  poll_322        text         Would You Rather\n","186  poll_339        text                   Random\n","187  poll_339        text             Hypothetical\n","199  poll_371        text                   Random\n","200  poll_371        text                    Other\n","204  poll_379        text                   Random\n","205  poll_379        text  Dating and Relationship\n","210  poll_384        text                   Random\n","211  poll_384        text  Dating and Relationship\n","213  poll_389        text                   Random\n","214  poll_389        text  Dating and Relationship\n","218  poll_395        text                   Random\n","219  poll_395        text  Dating and Relationship\n","235  poll_444        text                   Random\n","236  poll_444        text  Dating and Relationship\n","243  poll_458        text                   Random\n","244  poll_458        text         Would You Rather\n","252  poll_473        text                   Random\n","253  poll_473        text  Philosophy and Religion\n","259  poll_485        text                   Random\n","260  poll_485        text  Philosophy and Religion\n","261  poll_487        text                   Random\n","262  poll_487        text                    Other\n","281  poll_525        text                   Random\n","282  poll_525        text                Lifestyle\n","288  poll_532        text                   Random\n","289  poll_532        text                    Other\n","329  poll_604        text                   Random\n","330  poll_604        text                    Other\n","334  poll_616        text                   Random\n","335  poll_616        text                    Other\n","336  poll_617        text                   Random\n","337  poll_617        text             Hypothetical\n","349  poll_639        text                   Random\n","350  poll_639        text         Would You Rather\n","356  poll_650        text                   Random\n","357  poll_650        text  Dating and Relationship\n","370  poll_676        text                   Random\n","371  poll_676        text                    Other\n","380  poll_696        text                   Random\n","381  poll_696        text                    Other\n","428   poll_72        text                   Random\n","429   poll_72        text                 Internet\n","459  poll_134        text                   Random\n","460  poll_134        text             Hypothetical\n","463  poll_146        text                   Random\n","464  poll_146        text         Would You Rather\n","475  poll_169        text                   Random\n","476  poll_169        text                    Other\n","496  poll_192        text                   Random\n","497  poll_192        text  Dating and Relationship\n","507  poll_209        text                   Random\n","508  poll_209        text                 Internet\n","528  poll_244        text                   Random\n","529  poll_244        text                    Other\n","552  poll_285        text                   Random\n","553  poll_285        text  Dating and Relationship\n","562  poll_306        text                   Random\n","563  poll_306        text                    Other\n","565  poll_309        text                   Random\n","566  poll_309        text                    Other\n","607  poll_377        text                   Random\n","608  poll_377        text  Dating and Relationship\n","610  poll_380        text                   Random\n","611  poll_380        text                    Other\n","633  poll_415        text                   Random\n","634  poll_415        text                 Internet\n","661  poll_453        text                   Random\n","662  poll_453        text             Hypothetical\n","668  poll_469        text                   Random\n","669  poll_469        text                Lifestyle\n","673  poll_475        text                   Random\n","674  poll_475        text                    Other\n","676  poll_479        text                   Random\n","677  poll_479        text                    Other\n","682  poll_489        text                   Random\n","683  poll_489        text                    Other\n","690  poll_498        text                   Random\n","691  poll_498        text  Dating and Relationship\n","705  poll_535        text                   Random\n","706  poll_535        text                    Other\n","709  poll_538        text                   Random\n","710  poll_538        text                Lifestyle\n","737  poll_592        text                   Random\n","738  poll_592        text  Dating and Relationship\n","762  poll_631        text                   Random\n","763  poll_631        text             Hypothetical\n","774  poll_652        text                   Random\n","775  poll_652        text                    Other\n","803  poll_702        text                   Random\n","804  poll_702        text                    Other"],"text/html":["\n","  <div id=\"df-cfaa6d69-3943-4393-a2bf-cae6a053b77e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>poll_code</th>\n","      <th>displayType</th>\n","      <th>categories</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9</th>\n","      <td>poll_22</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>poll_22</td>\n","      <td>text</td>\n","      <td>Lifestyle</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>poll_33</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>poll_33</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>poll_97</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>poll_97</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>poll_101</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>poll_101</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>poll_107</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>poll_107</td>\n","      <td>text</td>\n","      <td>Would You Rather</td>\n","    </tr>\n","    <tr>\n","      <th>60</th>\n","      <td>poll_119</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>61</th>\n","      <td>poll_119</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","    <tr>\n","      <th>75</th>\n","      <td>poll_140</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>poll_140</td>\n","      <td>text</td>\n","      <td>Trivia</td>\n","    </tr>\n","    <tr>\n","      <th>78</th>\n","      <td>poll_142</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>79</th>\n","      <td>poll_142</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>83</th>\n","      <td>poll_149</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>84</th>\n","      <td>poll_149</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","    <tr>\n","      <th>90</th>\n","      <td>poll_161</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>91</th>\n","      <td>poll_161</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","    <tr>\n","      <th>128</th>\n","      <td>poll_235</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>129</th>\n","      <td>poll_235</td>\n","      <td>text</td>\n","      <td>Lifestyle</td>\n","    </tr>\n","    <tr>\n","      <th>143</th>\n","      <td>poll_256</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>144</th>\n","      <td>poll_256</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>150</th>\n","      <td>poll_269</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>151</th>\n","      <td>poll_269</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>173</th>\n","      <td>poll_319</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>174</th>\n","      <td>poll_319</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","    <tr>\n","      <th>175</th>\n","      <td>poll_322</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>176</th>\n","      <td>poll_322</td>\n","      <td>text</td>\n","      <td>Would You Rather</td>\n","    </tr>\n","    <tr>\n","      <th>186</th>\n","      <td>poll_339</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>187</th>\n","      <td>poll_339</td>\n","      <td>text</td>\n","      <td>Hypothetical</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>poll_371</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>200</th>\n","      <td>poll_371</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>204</th>\n","      <td>poll_379</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>205</th>\n","      <td>poll_379</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","    <tr>\n","      <th>210</th>\n","      <td>poll_384</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>poll_384</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","    <tr>\n","      <th>213</th>\n","      <td>poll_389</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>214</th>\n","      <td>poll_389</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","    <tr>\n","      <th>218</th>\n","      <td>poll_395</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>219</th>\n","      <td>poll_395</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","    <tr>\n","      <th>235</th>\n","      <td>poll_444</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>236</th>\n","      <td>poll_444</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","    <tr>\n","      <th>243</th>\n","      <td>poll_458</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>244</th>\n","      <td>poll_458</td>\n","      <td>text</td>\n","      <td>Would You Rather</td>\n","    </tr>\n","    <tr>\n","      <th>252</th>\n","      <td>poll_473</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>253</th>\n","      <td>poll_473</td>\n","      <td>text</td>\n","      <td>Philosophy and Religion</td>\n","    </tr>\n","    <tr>\n","      <th>259</th>\n","      <td>poll_485</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>260</th>\n","      <td>poll_485</td>\n","      <td>text</td>\n","      <td>Philosophy and Religion</td>\n","    </tr>\n","    <tr>\n","      <th>261</th>\n","      <td>poll_487</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>262</th>\n","      <td>poll_487</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>281</th>\n","      <td>poll_525</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>282</th>\n","      <td>poll_525</td>\n","      <td>text</td>\n","      <td>Lifestyle</td>\n","    </tr>\n","    <tr>\n","      <th>288</th>\n","      <td>poll_532</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>289</th>\n","      <td>poll_532</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>329</th>\n","      <td>poll_604</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>330</th>\n","      <td>poll_604</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>334</th>\n","      <td>poll_616</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>335</th>\n","      <td>poll_616</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>336</th>\n","      <td>poll_617</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>337</th>\n","      <td>poll_617</td>\n","      <td>text</td>\n","      <td>Hypothetical</td>\n","    </tr>\n","    <tr>\n","      <th>349</th>\n","      <td>poll_639</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>350</th>\n","      <td>poll_639</td>\n","      <td>text</td>\n","      <td>Would You Rather</td>\n","    </tr>\n","    <tr>\n","      <th>356</th>\n","      <td>poll_650</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>357</th>\n","      <td>poll_650</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","    <tr>\n","      <th>370</th>\n","      <td>poll_676</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>371</th>\n","      <td>poll_676</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>380</th>\n","      <td>poll_696</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>381</th>\n","      <td>poll_696</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>428</th>\n","      <td>poll_72</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>429</th>\n","      <td>poll_72</td>\n","      <td>text</td>\n","      <td>Internet</td>\n","    </tr>\n","    <tr>\n","      <th>459</th>\n","      <td>poll_134</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>460</th>\n","      <td>poll_134</td>\n","      <td>text</td>\n","      <td>Hypothetical</td>\n","    </tr>\n","    <tr>\n","      <th>463</th>\n","      <td>poll_146</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>464</th>\n","      <td>poll_146</td>\n","      <td>text</td>\n","      <td>Would You Rather</td>\n","    </tr>\n","    <tr>\n","      <th>475</th>\n","      <td>poll_169</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>476</th>\n","      <td>poll_169</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>poll_192</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>poll_192</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","    <tr>\n","      <th>507</th>\n","      <td>poll_209</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>508</th>\n","      <td>poll_209</td>\n","      <td>text</td>\n","      <td>Internet</td>\n","    </tr>\n","    <tr>\n","      <th>528</th>\n","      <td>poll_244</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>529</th>\n","      <td>poll_244</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>552</th>\n","      <td>poll_285</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>553</th>\n","      <td>poll_285</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","    <tr>\n","      <th>562</th>\n","      <td>poll_306</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>563</th>\n","      <td>poll_306</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>565</th>\n","      <td>poll_309</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>566</th>\n","      <td>poll_309</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>607</th>\n","      <td>poll_377</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>608</th>\n","      <td>poll_377</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","    <tr>\n","      <th>610</th>\n","      <td>poll_380</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>611</th>\n","      <td>poll_380</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>633</th>\n","      <td>poll_415</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>634</th>\n","      <td>poll_415</td>\n","      <td>text</td>\n","      <td>Internet</td>\n","    </tr>\n","    <tr>\n","      <th>661</th>\n","      <td>poll_453</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>662</th>\n","      <td>poll_453</td>\n","      <td>text</td>\n","      <td>Hypothetical</td>\n","    </tr>\n","    <tr>\n","      <th>668</th>\n","      <td>poll_469</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>669</th>\n","      <td>poll_469</td>\n","      <td>text</td>\n","      <td>Lifestyle</td>\n","    </tr>\n","    <tr>\n","      <th>673</th>\n","      <td>poll_475</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>674</th>\n","      <td>poll_475</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>676</th>\n","      <td>poll_479</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>677</th>\n","      <td>poll_479</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>682</th>\n","      <td>poll_489</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>683</th>\n","      <td>poll_489</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>690</th>\n","      <td>poll_498</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>691</th>\n","      <td>poll_498</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","    <tr>\n","      <th>705</th>\n","      <td>poll_535</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>706</th>\n","      <td>poll_535</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>709</th>\n","      <td>poll_538</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>710</th>\n","      <td>poll_538</td>\n","      <td>text</td>\n","      <td>Lifestyle</td>\n","    </tr>\n","    <tr>\n","      <th>737</th>\n","      <td>poll_592</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>738</th>\n","      <td>poll_592</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","    <tr>\n","      <th>762</th>\n","      <td>poll_631</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>763</th>\n","      <td>poll_631</td>\n","      <td>text</td>\n","      <td>Hypothetical</td>\n","    </tr>\n","    <tr>\n","      <th>774</th>\n","      <td>poll_652</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>775</th>\n","      <td>poll_652</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>803</th>\n","      <td>poll_702</td>\n","      <td>text</td>\n","      <td>Random</td>\n","    </tr>\n","    <tr>\n","      <th>804</th>\n","      <td>poll_702</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cfaa6d69-3943-4393-a2bf-cae6a053b77e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cfaa6d69-3943-4393-a2bf-cae6a053b77e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cfaa6d69-3943-4393-a2bf-cae6a053b77e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a0162552-b9d7-4905-a4ef-2939fdd31d27\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a0162552-b9d7-4905-a4ef-2939fdd31d27')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a0162552-b9d7-4905-a4ef-2939fdd31d27 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["poll_features[poll_features.poll_code.isin(list_of_double_cat)].categories.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UZ5pJLGQORmg","executionInfo":{"status":"ok","timestamp":1701004991158,"user_tz":0,"elapsed":14,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"2d131d45-7b2f-4cdb-de3b-70ef00892f48"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Random                     60\n","Other                      23\n","Dating and Relationship    16\n","Lifestyle                   5\n","Would You Rather            5\n","Hypothetical                5\n","Internet                    3\n","Philosophy and Religion     2\n","Trivia                      1\n","Name: categories, dtype: int64"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["# Based on manual investigation - random seems like an erroneous entry for these 60 polls"],"metadata":{"id":"QwgWxUOqRnxA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["poll_features = poll_features[~((poll_features.poll_code.isin(list_of_double_cat)) & (poll_features.categories=='Random'))]"],"metadata":{"id":"b7EoewvrS4uR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# checking for doule entries\n","temp = pd.DataFrame(poll_features.poll_code.value_counts()).reset_index()\n","temp[temp.poll_code>=2]['index']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JsmfC0VmTKVx","executionInfo":{"status":"ok","timestamp":1701004991158,"user_tz":0,"elapsed":13,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"a02723b2-09a5-4e0e-80a6-780c5fa5e42b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Series([], Name: index, dtype: object)"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["poll_features"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"yPX2rxOPbSat","executionInfo":{"status":"ok","timestamp":1701004991158,"user_tz":0,"elapsed":11,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"41bdc044-79c3-48a4-a7dc-e31f5f1f1266"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    poll_code displayType               categories\n","0      poll_3        text            Movies and TV\n","1      poll_4        text                    Other\n","2      poll_7        text          Food and Drinks\n","3     poll_11        text  Dating and Relationship\n","4     poll_12        text         Would You Rather\n","..        ...         ...                      ...\n","801  poll_698        text  Dating and Relationship\n","802  poll_701        text                    Other\n","804  poll_702        text                    Other\n","805  poll_703        text                 Internet\n","806  poll_705        text  Dating and Relationship\n","\n","[747 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-980f1d36-6209-40b5-a488-2ba0942dc753\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>poll_code</th>\n","      <th>displayType</th>\n","      <th>categories</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>poll_3</td>\n","      <td>text</td>\n","      <td>Movies and TV</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>poll_4</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>poll_7</td>\n","      <td>text</td>\n","      <td>Food and Drinks</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>poll_11</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>poll_12</td>\n","      <td>text</td>\n","      <td>Would You Rather</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>801</th>\n","      <td>poll_698</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","    <tr>\n","      <th>802</th>\n","      <td>poll_701</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>804</th>\n","      <td>poll_702</td>\n","      <td>text</td>\n","      <td>Other</td>\n","    </tr>\n","    <tr>\n","      <th>805</th>\n","      <td>poll_703</td>\n","      <td>text</td>\n","      <td>Internet</td>\n","    </tr>\n","    <tr>\n","      <th>806</th>\n","      <td>poll_705</td>\n","      <td>text</td>\n","      <td>Dating and Relationship</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>747 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-980f1d36-6209-40b5-a488-2ba0942dc753')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-980f1d36-6209-40b5-a488-2ba0942dc753 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-980f1d36-6209-40b5-a488-2ba0942dc753');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3a02caf0-ff76-4e82-ad79-4797137f700f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3a02caf0-ff76-4e82-ad79-4797137f700f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3a02caf0-ff76-4e82-ad79-4797137f700f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":57}]},{"cell_type":"markdown","source":["### Data Preparation"],"metadata":{"id":"fFyvFtuQHz-e"}},{"cell_type":"code","source":["#remove sessions\n","events_data = events_data[events_data.event!='Session']\n","\n","#remove unknown users\n","events_data = events_data[events_data.user_code!='unknown_user']"],"metadata":{"id":"c6sNWujbZr4n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#giving a score to each user\n","events_data['event_score'] = events_data.event.map({\n","    'Impression' : 0,\n","    'Expand' : 2,\n","    'Polls Answered'  : 3,\n","    'Shares' : 4\n","})"],"metadata":{"id":"fGdi4N1BZrwc","executionInfo":{"status":"ok","timestamp":1701004991158,"user_tz":0,"elapsed":10,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"9eef47d0-4a05-495f-90e1-6f4adeff8ee7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-59-b7037dc73b96>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  events_data['event_score'] = events_data.event.map({\n"]}]},{"cell_type":"code","source":["events_data['user_code_new'] = events_data.user_code.apply(lambda x : x.split(\"_\")[-1]).astype(int)\n","events_data['poll_code_new'] = events_data.poll_code.apply(lambda x : x.split(\"_\")[-1]).astype(int)"],"metadata":{"id":"i2GYvS0Oh29F"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ratings = events_data.groupby(['user_code_new','poll_code_new','event']).event_score.max().reset_index()\n","ratings = ratings.groupby(['user_code_new','poll_code_new']).event_score.sum().reset_index()"],"metadata":{"id":"7yEjt2FPfGpL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# events_data[(events_data.user_code_new==20) & (events_data.poll_code_new==273)]"],"metadata":{"id":"63uizvvjLqS-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ratings.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LS4PtnqCLfQs","executionInfo":{"status":"ok","timestamp":1701004992111,"user_tz":0,"elapsed":2,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"123c327d-8144-4e48-e2f9-95703656e69b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(130384, 3)"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["sns.displot(ratings.event_score,kind='kde')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":523},"id":"FAph41fNbHxU","executionInfo":{"status":"ok","timestamp":1701004993621,"user_tz":0,"elapsed":1511,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"795213de-85f9-47ba-c216-1612bdeb4bf3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x78771cf41c30>"]},"metadata":{},"execution_count":64},{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["ratings.event_score = ratings.event_score #/ (ratings.event_score.max() - 0)"],"metadata":{"id":"TO2o0dJKSpFp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ratings.event_score.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ILtKpe1eIact","executionInfo":{"status":"ok","timestamp":1701004993621,"user_tz":0,"elapsed":5,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"22d1072b-6710-4b2f-a599-d8bcc8c47171"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3    99713\n","0    25995\n","5     3024\n","2     1338\n","7      128\n","4       99\n","9       51\n","6       36\n","Name: event_score, dtype: int64"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["pd.cut(ratings.event_score,bins=[-1,1,3,9]).value_counts(normalize=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X3RsYFThKCTn","executionInfo":{"status":"ok","timestamp":1701004994097,"user_tz":0,"elapsed":480,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"055492d8-d6b0-4c8c-dc49-1d9ea717528b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1, 3]     0.775026\n","(-1, 1]    0.199373\n","(3, 9]     0.025601\n","Name: event_score, dtype: float64"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["# stratified to keep the distribution of movie ratings the same in train and test datasets.\n","train, test = train_test_split(\n","    ratings,\n","    test_size=0.1,\n","    stratify=ratings.event_score,\n","    random_state=42\n",")"],"metadata":{"id":"SQH8prwXIkDk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"kpePlTtAQif1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ratings.to_csv(\"ratings.csv\",index=False)"],"metadata":{"id":"TPCkS114QaLM"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Recommendation Engine"],"metadata":{"id":"L7EX-h9CbGgv"}},{"cell_type":"code","source":["# save = ratings.copy()"],"metadata":{"id":"IOJO98f6Up62"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ratings = train.copy()"],"metadata":{"id":"LfgDp2G_bHxj"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Colaborative Filtering"],"metadata":{"id":"tw5ZC_IMMPfl"}},{"cell_type":"code","source":["n_users = ratings.user_code_new.max()\n","n_items = ratings.poll_code_new.max()"],"metadata":{"id":"XqvCuEo-UqBL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["n_users,n_items"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Qg59zVGXUqHe","executionInfo":{"status":"ok","timestamp":1701004994098,"user_tz":0,"elapsed":4,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"05a40ad2-9158-4055-a3e9-3722cfaa819a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4835, 918)"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["ratings"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"r6GCVi7my192","executionInfo":{"status":"ok","timestamp":1701004994546,"user_tz":0,"elapsed":451,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"cafba822-2fa0-456c-f9f4-840d8111e299"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        user_code_new  poll_code_new  event_score\n","113981           3589            621            0\n","30265             296            344            3\n","97376            2691            118            0\n","94429            2501            127            0\n","61686            1001             89            0\n","...               ...            ...          ...\n","92440            2426            434            3\n","126102           4406            590            3\n","108643           3327            349            3\n","19621             160            493            0\n","49805             669            655            3\n","\n","[117345 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-243e3046-fcd6-4d31-9128-70d8759eaa59\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_code_new</th>\n","      <th>poll_code_new</th>\n","      <th>event_score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>113981</th>\n","      <td>3589</td>\n","      <td>621</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>30265</th>\n","      <td>296</td>\n","      <td>344</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>97376</th>\n","      <td>2691</td>\n","      <td>118</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>94429</th>\n","      <td>2501</td>\n","      <td>127</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>61686</th>\n","      <td>1001</td>\n","      <td>89</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>92440</th>\n","      <td>2426</td>\n","      <td>434</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>126102</th>\n","      <td>4406</td>\n","      <td>590</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>108643</th>\n","      <td>3327</td>\n","      <td>349</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>19621</th>\n","      <td>160</td>\n","      <td>493</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>49805</th>\n","      <td>669</td>\n","      <td>655</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>117345 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-243e3046-fcd6-4d31-9128-70d8759eaa59')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-243e3046-fcd6-4d31-9128-70d8759eaa59 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-243e3046-fcd6-4d31-9128-70d8759eaa59');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8f0c86cd-88d4-4b9d-bfdc-2b8a22a87a52\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8f0c86cd-88d4-4b9d-bfdc-2b8a22a87a52')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8f0c86cd-88d4-4b9d-bfdc-2b8a22a87a52 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["data_matrix = np.zeros((n_users, n_items))\n","data_matrix_similarity = np.zeros((n_users, n_items))\n","\n","for line in ratings[ratings.event_score!=0].itertuples():\n","\n","  # print(line)\n","  # print(line[1]) #user_code_new\n","  # print(line[2]) #poll_code_new\n","  # print(line[3]) #event_score\n","\n","  data_matrix[line[1]-1, line[2]-1] = line[3]\n","  data_matrix_similarity[line[1]-1, line[2]-1] = 1"],"metadata":{"id":"ZhMXumtkUqKh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%%time\n","from sklearn.metrics.pairwise import pairwise_distances\n","\n","user_similarity = pairwise_distances(data_matrix_similarity, metric='cosine')\n","item_similarity = pairwise_distances(data_matrix_similarity.T, metric='cosine')"],"metadata":{"id":"-ASwp9ZQUrx7","executionInfo":{"status":"ok","timestamp":1701008941324,"user_tz":0,"elapsed":1443,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"012fa870-869a-44a5-b817-4a580a5b8170"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["CPU times: user 1.66 s, sys: 252 ms, total: 1.92 s\n","Wall time: 1.08 s\n"]}]},{"cell_type":"code","source":["# %%time\n","# similarities = list()\n","\n","# for i in range(no_of_users) :\n","\n","#   row = list()\n","\n","#   for j in range(no_of_users):\n","\n","#     row.append(np.corrcoef(data_matrix_similarity[i], data_matrix_similarity[j])[0,1])\n","\n","#   similarities.append(row)"],"metadata":{"id":"oY9FRf5b_vTg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def predict(ratings, similarity, type='user'):\n","\n","    if type == 'user':\n","        mean_user_rating = ratings.mean(axis=1)\n","\n","        #We use np.newaxis so that mean_user_rating has same format as ratings\n","        ratings_diff = (ratings - mean_user_rating[:, np.newaxis])\n","\n","        pred = mean_user_rating[:, np.newaxis] + similarity.dot(ratings_diff) / np.array([np.abs(similarity).sum(axis=1)]).T\n","\n","    elif type == 'item':\n","        pred = ratings.dot(similarity) / np.array([np.abs(similarity).sum(axis=1)])\n","\n","    return pred"],"metadata":{"id":"GKnjkD8QUsld"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["user_prediction = predict(data_matrix, user_similarity, type='user')\n","# item_prediction = predict(data_matrix, item_similarity, type='item')"],"metadata":{"id":"LA8BWCZeUt3n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# a = data_matrix_similarity.astype(int)\n","# data_matrix_similarity_reverse = np.where((a==0)|(a==1), a^1, a)\n","\n","# # Some polls that already have users engagement (events), adjusting prediction for such polls to 0\n","# user_prediction_adjusted = user_prediction*data_matrix_similarity_reverse"],"metadata":{"id":"b2HSpnkTEMWW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["result = pd.DataFrame(user_prediction)"],"metadata":{"id":"Az2x3EWvUupv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["result.index = ['user_code'+'_'+str(i+1) for i in list(result.index)]\n","result.columns = ['poll_code'+'_'+str(i+1) for i in list(result.columns)]"],"metadata":{"id":"XZbx-x-5UvBu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["result = result.reset_index()\n","result = result.rename(columns={'index':'user_code'})"],"metadata":{"id":"P6hKtmCmUwHG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["result = result.melt(['user_code']).rename(columns={'variable':'poll_code'})"],"metadata":{"id":"HToiBehgBdE1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["result.sort_values(['user_code','value'], ascending=[True, False]).groupby('user_code').head(50)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"fMfxzHS6Bj5U","executionInfo":{"status":"ok","timestamp":1701009151048,"user_tz":0,"elapsed":7269,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"b2257e08-6696-443b-a28f-a30b6ef19ed2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             user_code      poll_code     value\n","522180     user_code_1  poll_code_109  0.468104\n","2137070    user_code_1  poll_code_443  0.447289\n","894475     user_code_1  poll_code_186  0.416337\n","352955     user_code_1   poll_code_74  0.367774\n","319110     user_code_1   poll_code_67  0.363911\n","...                ...            ...       ...\n","382963   user_code_999   poll_code_80  0.215734\n","581198   user_code_999  poll_code_121  0.214926\n","3124408  user_code_999  poll_code_647  0.214033\n","49348    user_code_999   poll_code_11  0.213978\n","3018038  user_code_999  poll_code_625  0.209649\n","\n","[241750 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-ebaee0b8-db12-4778-92a6-a865fff398c2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_code</th>\n","      <th>poll_code</th>\n","      <th>value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>522180</th>\n","      <td>user_code_1</td>\n","      <td>poll_code_109</td>\n","      <td>0.468104</td>\n","    </tr>\n","    <tr>\n","      <th>2137070</th>\n","      <td>user_code_1</td>\n","      <td>poll_code_443</td>\n","      <td>0.447289</td>\n","    </tr>\n","    <tr>\n","      <th>894475</th>\n","      <td>user_code_1</td>\n","      <td>poll_code_186</td>\n","      <td>0.416337</td>\n","    </tr>\n","    <tr>\n","      <th>352955</th>\n","      <td>user_code_1</td>\n","      <td>poll_code_74</td>\n","      <td>0.367774</td>\n","    </tr>\n","    <tr>\n","      <th>319110</th>\n","      <td>user_code_1</td>\n","      <td>poll_code_67</td>\n","      <td>0.363911</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>382963</th>\n","      <td>user_code_999</td>\n","      <td>poll_code_80</td>\n","      <td>0.215734</td>\n","    </tr>\n","    <tr>\n","      <th>581198</th>\n","      <td>user_code_999</td>\n","      <td>poll_code_121</td>\n","      <td>0.214926</td>\n","    </tr>\n","    <tr>\n","      <th>3124408</th>\n","      <td>user_code_999</td>\n","      <td>poll_code_647</td>\n","      <td>0.214033</td>\n","    </tr>\n","    <tr>\n","      <th>49348</th>\n","      <td>user_code_999</td>\n","      <td>poll_code_11</td>\n","      <td>0.213978</td>\n","    </tr>\n","    <tr>\n","      <th>3018038</th>\n","      <td>user_code_999</td>\n","      <td>poll_code_625</td>\n","      <td>0.209649</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>241750 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ebaee0b8-db12-4778-92a6-a865fff398c2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ebaee0b8-db12-4778-92a6-a865fff398c2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ebaee0b8-db12-4778-92a6-a865fff398c2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f4c4677e-98f2-4a91-8810-df9a5c1cd86d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f4c4677e-98f2-4a91-8810-df9a5c1cd86d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f4c4677e-98f2-4a91-8810-df9a5c1cd86d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":240}]},{"cell_type":"code","source":["sns.displot(result.value,kind='kde')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":523},"id":"NH_TgVQwXaJk","executionInfo":{"status":"ok","timestamp":1700994223599,"user_tz":0,"elapsed":26127,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"ee9b4ea7-f415-4c7d-9727-688b6422fd7c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7f9651402950>"]},"metadata":{},"execution_count":292},{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["test['user_code'] = 'user_code'+'_'+test['user_code_new'].astype(str)\n","test['poll_code'] = 'poll_code'+'_'+test['poll_code_new'].astype(str)"],"metadata":{"id":"YlbAZ-9hXjV3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test  = test.merge(result,on=('user_code','poll_code'),how='left')"],"metadata":{"id":"ycsLBP9lNoLh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sns.displot(test['value'],kind='kde')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":523},"id":"pU2dTgPyXX2g","executionInfo":{"status":"ok","timestamp":1700994226260,"user_tz":0,"elapsed":637,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"da00718c-e2bf-478e-e8a0-ac397d5937d4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7f96523c68c0>"]},"metadata":{},"execution_count":295},{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.displot(test['event_score'],kind='kde')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":524},"id":"f43mkSvWaLfL","executionInfo":{"status":"ok","timestamp":1700994226856,"user_tz":0,"elapsed":601,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"232edbc8-b425-46ef-ea36-e63819d67afb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7f9651bfa920>"]},"metadata":{},"execution_count":296},{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["(test.value>0).value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tkBqEV2J9_20","executionInfo":{"status":"ok","timestamp":1700994327647,"user_tz":0,"elapsed":507,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"e0882293-8fd6-43c9-ab37-d890c684ea54"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True     12915\n","False      124\n","Name: value, dtype: int64"]},"metadata":{},"execution_count":317}]},{"cell_type":"code","source":["(test.event_score>0).value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wCWRnWyG__7e","executionInfo":{"status":"ok","timestamp":1700994327879,"user_tz":0,"elapsed":3,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"cb2d801b-5674-4d29-90ea-8e322b285b2f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True     10439\n","False     2600\n","Name: event_score, dtype: int64"]},"metadata":{},"execution_count":318}]},{"cell_type":"code","source":["true_ratings = defaultdict(list)"],"metadata":{"id":"K1A6tkZWA6z6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["true_ratings"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N1t146QoA8Lx","executionInfo":{"status":"ok","timestamp":1700994341012,"user_tz":0,"elapsed":3,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"a07773c7-0e23-4190-fba7-5f1cffb9e4a1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["defaultdict(list, {})"]},"metadata":{},"execution_count":320}]},{"cell_type":"markdown","source":["### Metrics"],"metadata":{"id":"jm-oeKxVCAs9"}},{"cell_type":"code","source":["import numpy as np\n","from sklearn.metrics import precision_score, recall_score, f1_score\n","\n","def get_top_n(predictions, n=50):\n","    top_n = {}\n","    for uid, iid, true_r, est, _ in predictions:\n","        if uid not in top_n:\n","            top_n[uid] = []\n","        top_n[uid].append((iid, est))\n","\n","    for uid, user_ratings in top_n.items():\n","        user_ratings.sort(key=lambda x: x[1], reverse=True)\n","        top_n[uid] = user_ratings[:n]\n","    return top_n\n","\n","def predictions_to_array(predictions):\n","    return [(uid, iid, true_r, est, _) for uid, iid, true_r, est, _ in predictions]\n","\n","def precision_recall_at_k(predictions, k=50, threshold=0.1):\n","    true_ratings = defaultdict(list)\n","    for uid, iid, true_r, est, _ in predictions:\n","        true_ratings[uid].append((iid, true_r))\n","\n","    top_n = get_top_n(predictions, n=k)\n","\n","    precision_list = []\n","    recall_list = []\n","\n","    for uid, user_ratings in true_ratings.items():\n","        relevant_items = [iid for iid, true_r in user_ratings if true_r >= threshold]\n","        recommended_items = [iid for iid, est in top_n[uid]]\n","\n","        precision = len(set(relevant_items) & set(recommended_items)) / float(len(recommended_items)) if len(recommended_items) > 0 else 0\n","        precision_list.append(precision)\n","\n","        recall = len(set(relevant_items) & set(recommended_items)) / float(len(relevant_items)) if len(relevant_items) > 0 else 0\n","        recall_list.append(recall)\n","\n","    return np.mean(precision_list), np.mean(recall_list), precision_list,recall_list\n"],"metadata":{"id":"m5QBJYau-AVa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Assuming 'test' DataFrame has the required columns\n","predictions = [(row['user_code_new'], row['poll_code_new'], row['event_score'], row['value'], None) for _, row in test.iterrows()]\n","\n","# Calculate precision and recall at k\n","precision_at_k, recall_at_k, p_l, r_l = precision_recall_at_k(predictions, k=2, threshold=1)\n","\n","print(f\"Precision at 10: {precision_at_k:.4f}\")\n","print(f\"Recall at 10: {recall_at_k:.4f}\")\n","\n","# Calculate F1 score\n","actual_ratings = test['event_score'].values\n","predicted_ratings = test['value'].values\n","f1 = f1_score(actual_ratings >= 0.1, predicted_ratings >= 0.1)\n","print(f\"F1 Score: {f1:.4f}\")\n","\n","# Calculate NDCG\n","def ndcg(predictions, k=50):\n","    dcg = 0.0\n","    idcg = 0.0\n","\n","    for i in range(min(k, len(predictions))):\n","        _, true_r = predictions[i]\n","        dcg += (2 ** true_r - 1) / np.log2(i + 2)\n","\n","    sorted_true_ratings = sorted(predictions, key=lambda x: x[1], reverse=True)\n","\n","    for i in range(min(k, len(sorted_true_ratings))):\n","        _, true_r = sorted_true_ratings[i]\n","        idcg += (2 ** true_r - 1) / np.log2(i + 2)\n","\n","    if idcg == 0.0:\n","        return 0.0\n","\n","    return dcg / idcg\n","\n","# Get true ratings for each user\n","true_ratings = defaultdict(list)\n","for _, row in test.iterrows():\n","    true_ratings[row['user_code_new']].append((row['poll_code_new'], row['event_score']))\n","\n","# Get the top N recommendations for each user\n","top_n = get_top_n(predictions, n=2)\n","\n","# Calculate NDCG at k\n","ndcg_at_k = np.mean([ndcg(true_ratings[uid], k=2) for uid in true_ratings.keys()])\n","print(f\"NDCG at 10: {ndcg_at_k:.4f}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9nar8FJP-6Of","executionInfo":{"status":"ok","timestamp":1700994907837,"user_tz":0,"elapsed":2817,"user":{"displayName":"Samriddh Lakhmani","userId":"02521612938973610721"}},"outputId":"f28b9835-5824-45da-9579-7a4fbe1bd812"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Precision at 10: 0.7821\n","Recall at 10: 0.5713\n","F1 Score: 0.8426\n","NDCG at 10: 0.7463\n"]}]}]}